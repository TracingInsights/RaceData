name: Update F1 Datasets

on:
  # Run every Sunday at 11 PM IST (5:30 PM UTC)
  schedule:
    - cron: '30 17 * * 0'

  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-datasets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          uv sync --frozen

      - name: Create Kaggle credentials
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"$KAGGLE_USERNAME\",\"key\":\"$KAGGLE_KEY\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Download datasets and create zip
        run: |
          uv run python download_datasets.py

      - name: Check for changes
        id: check_changes
        run: |
          git add data/
          if git diff --staged --quiet; then
            echo "No changes detected"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in data files"
            echo "changes=true" >> $GITHUB_OUTPUT
            # Also add the zip file if data changed
            git add data.zip
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Get current date for commit message
          COMMIT_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

          git commit -m "chore: update F1 datasets - $COMMIT_DATE" \
                     -m "Automated update of Formula 1 datasets from Kaggle" \
                     -m "- formula-1-race-data" \
                     -m "- formula-1-race-events"

          git push

      - name: Create GitHub Release
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Generate tag name based on current date
          TAG_NAME="data-$(date -u +%Y-%m-%d)"
          RELEASE_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          # Create release with the zip file
          gh release create "$TAG_NAME" \
            --title "F1 Dataset - $TAG_NAME" \
            --notes "üìä **Automated F1 Dataset Update**

          **Release Date:** $RELEASE_DATE

          This release contains the latest Formula 1 race data from Kaggle datasets:
          - formula-1-race-data (jtrotman/formula-1-race-data)
          - formula-1-race-events (jtrotman/formula-1-race-events)

          **Download:** Use the \`data.zip\` file below to get all datasets in one archive.

          **Data Coverage:** 1950 - Present Season

          ---
          ü§ñ This release was automatically generated by GitHub Actions." \
            data.zip

      - name: No changes
        if: steps.check_changes.outputs.changes == 'false'
        run: |
          echo "‚ÑπÔ∏è No changes detected in datasets. Repository is up to date."
